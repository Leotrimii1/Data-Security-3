import javax.swing.*;
import javax.swing.filechooser.FileNameExtensionFilter;
import java.awt.event.*;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.util.Scanner;

public class Main {

    public static void main(String[] args) {
        // Create the main window
        JFrame mainFrame = new JFrame("Cipher");
        mainFrame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        mainFrame.setSize(400, 300);
        mainFrame.setLocationRelativeTo(null); // Center the window on the screen

        // Create the Caesar button
        JButton caesarButton = new JButton("Caesar");
        caesarButton.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                // Create the Caesar window
                JFrame caesarFrame = new JFrame("Caesar Cipher");
                caesarFrame.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE); // Close only the Caesar window
                caesarFrame.setSize(300, 200);
                caesarFrame.setLocationRelativeTo(null); // Center the window on the screen

                // Create the Encrypt and Decrypt buttons
                JButton encryptButton = new JButton("Encrypt");
                JButton decryptButton = new JButton("Decrypt");

                encryptButton.addActionListener(new ActionListener() {
                    public void actionPerformed(ActionEvent e) {
                        // Create a file chooser dialog to select the file to encrypt
                        JFileChooser fileChooser = new JFileChooser();
                        fileChooser.setFileSelectionMode(JFileChooser.FILES_ONLY);
                        fileChooser.setFileFilter(new FileNameExtensionFilter("Text files", "txt"));
                        int result = fileChooser.showOpenDialog(caesarFrame);

                        if (result == JFileChooser.APPROVE_OPTION) {
                            // Get the selected file and create a new file to write the encrypted text to
                            File inputFile = fileChooser.getSelectedFile();
                            String outputFilePath = inputFile.getParent() + "/encrypted_" + inputFile.getName();
                            File outputFile = new File(outputFilePath);

                            try {
                                // Read the contents of the input file
                                FileInputStream inputStream = new FileInputStream(inputFile);
                                Scanner scanner = new Scanner(inputStream);
                                StringBuilder inputTextBuilder = new StringBuilder();
                                while (scanner.hasNextLine()) {
                                    inputTextBuilder.append(scanner.nextLine());
                                    inputTextBuilder.append("\n");
                                }
                                scanner.close();
                                inputStream.close();

                                // Encrypt the input text using the Caesar cipher algorithm
                                int shift = 3;
                                String inputText = inputTextBuilder.toString();
                                String encryptedText = caesarEncrypt(inputText, shift);

                                // Write the encrypted text to the output file
                                FileOutputStream outputStream = new FileOutputStream(outputFile);
                                outputStream.write(encryptedText.getBytes());
                                outputStream.close();

                                JOptionPane.showMessageDialog(caesarFrame, "File encrypted successfully.", "Success", JOptionPane.INFORMATION_MESSAGE);
                            } catch (IOException ex) {
                                JOptionPane.showMessageDialog(caesarFrame, "Error encrypting file: " + ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
                            }
                        }
                    }
                });
